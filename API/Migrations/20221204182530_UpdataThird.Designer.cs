// <auto-generated />
using System;
using API.Repo.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(Repository))]
    [Migration("20221204182530_UpdataThird")]
    partial class UpdataThird
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("API.Models.AdressPersons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdressPersons");
                });

            modelBuilder.Entity("API.Models.Aducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NameKurs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aducations");
                });

            modelBuilder.Entity("API.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AdressesId")
                        .HasColumnType("int");

                    b.Property<int?>("KursesId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .HasColumnName("NamePerson");

                    b.Property<string>("Surname")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SurnamePerson");

                    b.HasKey("Id");

                    b.HasIndex("AdressesId");

                    b.HasIndex("KursesId");

                    b.ToTable("Persons", "ApiBase");
                });

            modelBuilder.Entity("API.Models.Person", b =>
                {
                    b.HasOne("API.Models.AdressPersons", "Adresses")
                        .WithMany()
                        .HasForeignKey("AdressesId");

                    b.HasOne("API.Models.Aducation", "Kurses")
                        .WithMany("Persons")
                        .HasForeignKey("KursesId");

                    b.Navigation("Adresses");

                    b.Navigation("Kurses");
                });

            modelBuilder.Entity("API.Models.Aducation", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
